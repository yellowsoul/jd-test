【提交所有到暂存区】
git add .

【提交所有到仓库】
git commit -m

【查看状态】
git status

【展示日志】
git log
不希望日志展示过多内容：(只显示 快照id和快照备注)
git log --oneline

【修改上一次最后一次提交的快照】
git commit --amend --m 'index change'


【获取SSH秘钥】
ssh-keygen



【到github个人设置找“SSH and Gpg keys”设置公钥】
在本地电脑上把复制的ssh.pub公钥keys复制进去

===============
第一种推送远程仓库方式（没搞懂）
===============
【添加别名】
git remote add origin git@github.com:yellowsoul/jd-test.git

"origin"这个就是后面SSH链接的别名


【推送到远程仓库主分支】
$ git push origin master(默认分支目前改为main)

===============
第二种推送远程仓库方式（常用）
===============
【克隆远程仓库到本地】
git clone git@github.com:yellowsoul/jd-test.git

1.cd jd-test 进入文件夹
2.git remote -v 查看关联
3.然后放入文件，一套（git status ,git add . git commit -m '信息'）后
4.$ git push origin main
5.创建子分支 git branch yellow,然后就可以删除里面在你不想要的，然后再把新的或者修改的放进去，再推远程仓库，git push origin yellow，哪个分支就推到哪个名字。

【如何合并分支】查看状态树 git log --graph --all --oneline

git merge '分支名'

【删除分支】
git branch -d '分支名' (正常删除子分支得在父分支上删除，不过有强制删除的办法，就是把这里的'-d'改为'-D')

【删除远程分支】（git branch -a 查看所有分支）

git push origin --delete 分支名









/*******
Git 中 SSH key 生成步骤
由于本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以必须要让github仓库认证你SSH key，在此之前，必须要生成SSH key。

 

第1步：创建SSH Key。在windows下查看[c盘->用户->自己的用户名->.ssh]下是否有id_rsa、id_rsa.pub文件，如果没有需要手动生成。
打开git bash，在控制台中输入以下命令。

1
$ ssh-keygen -t rsa -C "youremail@example.com"
密钥类型可以用 -t 选项指定。如果没有指定则默认生成用于SSH-2的RSA密钥。这里使用的是rsa。

同时在密钥中有一个注释字段，用-C来指定所指定的注释，可以方便用户标识这个密钥，指出密钥的用途或其他有用的信息。所以在这里输入自己的邮箱或者其他都行。

输入完毕后程序同时要求输入一个密语字符串(passphrase)，空表示没有密语。接着会让输入2次口令(password)，空表示没有口令。3次回车即可完成当前步骤，此时[c盘>用户>自己的用户名>.ssh]目录下已经生成好了。

 

第2步：登录github。打开setting->SSH keys，点击右上角 New SSH key，把生成好的公钥id_rsa.pub放进 key输入框中，再为当前的key起一个title来区分每个key。

********/